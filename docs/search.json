[{"path":[]},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Isaac Mehlhaff. Author, maintainer, copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mehlhaff ID (2023). “Mass Polarization across Time Space.” Book manuscript.","code":"@Unpublished{,   title = {Mass Polarization across Time and Space},   author = {Isaac D. Mehlhaff},   year = {2023},   note = {Book manuscript}, }"},{"path":"/index.html","id":"polarcap","dir":"","previous_headings":"","what":"Access the Polarization in Comparative Attitudes Project","title":"Access the Polarization in Comparative Attitudes Project","text":"Distributes data Polarization Comparative Attitudes Project. Helper functions enable data retrieval wide tidy formats user-defined countries years. Provides support case-insensitive country names many languages.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access the Polarization in Comparative Attitudes Project","text":"two ways easily install package R. install stable version released CRAN, install normal: install recent development version, first ensure latest version devtools installed: {r} install.packages(\"devtools\") library(devtools) , run following code: {r} devtools::install_github(\"imehlhaff/PolarCAP\")","code":"install.packages(\"PolarCAP\") library(PolarCAP)"},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Access the Polarization in Comparative Attitudes Project","text":"cite PolarCAP publications working papers, please use: Mehlhaff, Isaac D. Mass Polarization across Time Space, book manuscript (August 2023). BibTeX users:","code":"@unpublished{Mehlhaff2023,   type = {Book {{Manuscript}}},   title = {Mass {{Polarization}} across {{Time}} and {{Space}}},   author = {Mehlhaff, Isaac D.},   year = {2023},   month = aug,   address = {{The University of North Carolina at Chapel Hill}} }"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Access the Polarization in Comparative Attitudes Project","text":"users package primarily interested using easily retrieve polarization estimates defined set countries years. example, let us take countries years generated following:","code":"countries <- rep(c(\"AUS\", \"MEX\", \"USA\"), each = 2) years <- rep(c(2018, 2019), 3) data <- as.data.frame(cbind(countries, years))"},{"path":"/index.html","id":"retrieve-data-frame","dir":"","previous_headings":"Usage","what":"Retrieve Data Frame","title":"Access the Polarization in Comparative Attitudes Project","text":"One way retrieve polarization estimates countries years generated pass vectors countries years get.PolarCAP() melt.PolarCAP(), return wide tidy data frames, respectively: {r} get.PolarCAP(countries = countries, years = years, type = c(\"ideology\", \"affect\")) melt.PolarCAP(countries = countries, years = years, type = c(\"ideology\", \"affect\")) Standard errors polarization estimates can retrieved adding optional include.se argument, defaults FALSE: {r} get.PolarCAP(countries = countries, years = years, type = c(\"ideology\", \"affect\"), include.se = TRUE) melt.PolarCAP(countries = countries, years = years, type = c(\"ideology\", \"affect\"), include.se = TRUE)","code":""},{"path":"/index.html","id":"retrieve-individual-values","dir":"","previous_headings":"Usage","what":"Retrieve Individual Values","title":"Access the Polarization in Comparative Attitudes Project","text":"Another way retrieve polarization estimates set countries years return scalar polarization estimate associated country-year. feature particularly useful user imbalanced time series, prefer avoid merging data frames, working within dplyr pipeline: {r} data$ideology1 <- apply(data, 1, function(x) get.PolarCAP(countries = x[1], years = x[2], type = \"ideology\", value.= TRUE)) data <- rowwise(data) %>% mutate(ideology2 = get.PolarCAP(countries = countries, years = years, type = \"ideology\", value.= TRUE)) data","code":""},{"path":"/index.html","id":"a-note-on-country-identifiers","dir":"","previous_headings":"Usage","what":"A Note on Country Identifiers","title":"Access the Polarization in Comparative Attitudes Project","text":"countries defined ISO 3166-1 alpha-3 country code format. preferred input *.PolarCAP(). However, functions accept country names almost language format attempt convert ISO3 codes calling .ISO3(). *.PolarCAP() alert user country names still unrecognized conversion return results recognized. addition, country codes case-insensitive. Thus, following return output: {r} get.PolarCAP(countries = c(\"AUS\", \"MEX\", \"USA\"), years = 2019, type = \"ideology\") get.PolarCAP(countries = c(\"aus\", \"MEX\", \"united states\"), years = 2019, type = \"ideology\") get.PolarCAP(countries = c(\"aus\", \"MEX\", \"Stati Uniti\"), years = 2019, type = \"ideology\")","code":""},{"path":"/reference/get.PolarCAP.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve PolarCAP Data — get.PolarCAP","title":"Retrieve PolarCAP Data — get.PolarCAP","text":"Retrieves PolarCAP data defined countries years. Returns data wide format. tidy format, use melt.PolarCAP().","code":""},{"path":"/reference/get.PolarCAP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve PolarCAP Data — get.PolarCAP","text":"","code":"get.PolarCAP(   countries = NA,   years = NA,   type = c(\"ideology\", \"affect\"),   value.only = FALSE,   include.se = FALSE )"},{"path":"/reference/get.PolarCAP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve PolarCAP Data — get.PolarCAP","text":"countries character vector countries retrieved. See Details. years numeric vector years retrieved. type character vector indicating polarization estimates returned. Must \"ideology\", \"affect\", . value.logical indicating whether get.PolarCAP() return data frame results (FALSE, default) single estimate scalar (TRUE). include.se logical indicating whether standard errors returned. Defaults FALSE.","code":""},{"path":"/reference/get.PolarCAP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve PolarCAP Data — get.PolarCAP","text":"value.= FALSE, get.PolarCAP() returns data frame columns corresponding country names, country ISO3 codes, years, polarization estimates polarization type(s) given type, associated standard errors (include.se = TRUE). value.= TRUE, get.PolarCAP() returns scalar polarization estimate polarization type given type.","code":""},{"path":"/reference/get.PolarCAP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve PolarCAP Data — get.PolarCAP","text":"Ideally, country names passed countries ISO 3166-1 alpha-3 country codes (case-insensitive). However, get.PolarCAP() accept country names almost language format attempt convert ISO3 codes calling .ISO3(). get.PolarCAP() alert user country names still unrecognized conversion return results recognized.","code":""},{"path":"/reference/get.PolarCAP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve PolarCAP Data — get.PolarCAP","text":"","code":"get.PolarCAP(\"USA\", c(2018, 2019), \"ideology\", include.se = TRUE) #> # A tibble: 2 × 6 #>   country       country_code  year ideology ideology_se notes #>   <chr>         <chr>        <dbl>    <dbl>       <dbl> <chr> #> 1 United States USA           2018    0.682     0.00970 NA    #> 2 United States USA           2019    0.761     0.0102  NA    get.PolarCAP(\"USA\", c(2018, 2019), c(\"ideology\", \"affect\"), include.se = TRUE) #> # A tibble: 2 × 8 #>   country       country_code  year ideology affect ideology_se affect_se notes #>   <chr>         <chr>        <dbl>    <dbl>  <dbl>       <dbl>     <dbl> <chr> #> 1 United States USA           2018    0.682  0.773     0.00970    0.0114 NA    #> 2 United States USA           2019    0.761  0.728     0.0102     0.0118 NA     countries <- rep(c(\"MEX\", \"USA\"), each = 2) years <- rep(c(2018, 2019), 2) data <- as.data.frame(cbind(countries, years))  data$ideology1 <- apply(data, 1, function(x) get.PolarCAP(x[1], x[2], type = \"ideology\", value.only = TRUE)) data #>   countries years ideology1 #> 1       MEX  2018 0.6114545 #> 2       MEX  2019 0.6389439 #> 3       USA  2018 0.6819618 #> 4       USA  2019 0.7611854"},{"path":"/reference/melt.PolarCAP.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Tidy PolarCAP Data — melt.PolarCAP","title":"Retrieve Tidy PolarCAP Data — melt.PolarCAP","text":"Retrieves PolarCAP data defined countries years. Returns data tidy format. wide format, return polarization estimate scalar, use get.PolarCAP().","code":""},{"path":"/reference/melt.PolarCAP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Tidy PolarCAP Data — melt.PolarCAP","text":"","code":"melt.PolarCAP(   countries = NA,   years = NA,   type = c(\"ideology\", \"affect\"),   include.se = FALSE )"},{"path":"/reference/melt.PolarCAP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Tidy PolarCAP Data — melt.PolarCAP","text":"countries character vector countries retrieved. See Details. years numeric vector years retrieved. type character vector indicating polarization estimates returned. Must \"ideology\", \"affect\", . include.se logical indicating whether standard errors returned. Defaults FALSE.","code":""},{"path":"/reference/melt.PolarCAP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Tidy PolarCAP Data — melt.PolarCAP","text":"data frame columns corresponding country names, country ISO3 codes, years, polarization types given type, polarization estimates, associated standard errors (include.se = TRUE).","code":""},{"path":"/reference/melt.PolarCAP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Tidy PolarCAP Data — melt.PolarCAP","text":"Ideally, country names passed countries ISO 3166-1 alpha-3 country codes (case-insensitive). However, melt.PolarCAP() accept country names almost language format attempt convert ISO3 codes calling .ISO3(). melt.PolarCAP() alert user country names still unrecognized conversion return results recognized.","code":""},{"path":"/reference/melt.PolarCAP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Tidy PolarCAP Data — melt.PolarCAP","text":"","code":"melt.PolarCAP(\"USA\", c(2018, 2019), \"ideology\", include.se = TRUE) #>         country country_code year     type  estimate          se notes #> 1 United States          USA 2018 ideology 0.6819618 0.009698904  <NA> #> 2 United States          USA 2019 ideology 0.7611854 0.010172854  <NA> melt.PolarCAP(\"USA\", c(2018, 2019), c(\"ideology\", \"affect\"), include.se = TRUE) #>         country country_code year     type  estimate          se notes #> 1 United States          USA 2018 ideology 0.6819618 0.009698904  <NA> #> 2 United States          USA 2018   affect 0.7726953 0.011448660  <NA> #> 3 United States          USA 2019 ideology 0.7611854 0.010172854  <NA> #> 4 United States          USA 2019   affect 0.7283458 0.011798293  <NA>"},{"path":"/reference/to.ISO3.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Country Names for PolarCAP Retrieval — to.ISO3","title":"Convert Country Names for PolarCAP Retrieval — to.ISO3","text":"Checks requested countries formatted correctly PolarCAP attempts convert ISO 3166-1 alpha-3 country codes .","code":""},{"path":"/reference/to.ISO3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Country Names for PolarCAP Retrieval — to.ISO3","text":"","code":"to.ISO3(countries)"},{"path":"/reference/to.ISO3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Country Names for PolarCAP Retrieval — to.ISO3","text":"countries character vector countries checked (case-insensitive).","code":""},{"path":"/reference/to.ISO3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Country Names for PolarCAP Retrieval — to.ISO3","text":"character vector length equal countries.","code":""},{"path":"/reference/to.ISO3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Country Names for PolarCAP Retrieval — to.ISO3","text":"","code":"to.ISO3(c(\"ALB\", \"aus\", \"united states\")) #> [1] \"ALB\" \"AUS\" \"USA\""},{"path":"/news/index.html","id":"polarcap-101","dir":"Changelog","previous_headings":"","what":"PolarCAP 1.0.1","title":"PolarCAP 1.0.1","text":"CRAN release: 2023-07-10 Initial CRAN submission.","code":""}]
